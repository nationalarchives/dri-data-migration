@page "/variation/{id}"
@model Explorer.Pages.Variation.ItemModel

<partial name="SubsetBreadcrumbPartial" model="@Model.Item.Asset.Single().Subset.Single().Broader" />

<section class="row tna-!--margin-top-m tna-column tna-column--full">
    <h1>Variation @Model.Item.Name.Single()</h1>
    <dl class="tna-dl tna-dl--plain">
        <dt>DRI Id</dt>
        <dd>@Model.Item.Id.Single()</dd>
    </dl>

    <div class="tna-!--margin-top-m">
        <h2>Asset <a asp-page="/asset/item" asp-route-id="@Model.Item.Asset.Single().Reference.Single()">@Model.Item.Asset.Single().Reference.Single()</a></h2>
    </div>

    @if (Model.Item.SensitivityReviews.Any())
    {
        <div class="tna-!--margin-top-m">
            <h2>Sensitivity reviews</h2>
            <ul class="tna-ul tna-ul--dashed">
                @foreach (var sr in Model.Item.SensitivityReviews)
                {
                    <li>
                        <p>
                            <a asp-page="/sensitivityreview/item" asp-route-id="@sr.DriId.Single()">@sr.DriId.Single()</a>
                        </p>
                        <partial name="SensitivityReviewPartial" model="@sr" />
                    </li>
                }
            </ul>
        </div>
    }
</section>

<section class="tna-container tna-!--margin-top-m">
    <div class="tna-column tna-column--full">
        <div class="tna-form__group">
            @{
                var ldWriter = new VDS.RDF.Writing.JsonLdWriter();
                var ts = new VDS.RDF.TripleStore();
                ts.Add(Model.Item.Graph);
                var input = ldWriter.SerializeStore(ts);

                var txt = System.IO.File.ReadAllText("frame.jsonld");
                var frame = Newtonsoft.Json.Linq.JToken.Parse(txt);
                var options = new VDS.RDF.JsonLd.JsonLdProcessorOptions()
                {
                    Embed = VDS.RDF.JsonLd.Syntax.JsonLdEmbed.Always
                };
                var framed = VDS.RDF.JsonLd.JsonLdProcessor.Frame(input, frame, options);
                framed.Remove("@context");
                framed.Remove("@type");
                var lastSr = framed.Value<Newtonsoft.Json.Linq.JArray>("sensitivityReview").Last;
                framed.GetValue("sensitivityReview").Replace(lastSr);
                <textarea class="tna-textarea" rows="25" readonly>@framed.ToString()</textarea>
            }
        </div>
    </div>
</section>