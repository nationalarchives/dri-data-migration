using Api;
using VDS.RDF;
using VDS.RDF.Dynamic;

namespace Explorer.Models;

public class Asset(INode node, IGraph graph) : DynamicNode(node, graph)
{
    public ICollection<string> Id => new DynamicObjectCollection<string>(this, Vocabulary.AssetDriId.Uri.ToString());
    public ICollection<string> Names => new DynamicObjectCollection<string>(this, Vocabulary.AssetName.Uri.ToString());
    public ICollection<string> Reference => new DynamicObjectCollection<string>(this, Vocabulary.AssetReference.Uri.ToString());
    public ICollection<string> PastReference => new DynamicObjectCollection<string>(this, Vocabulary.AssetPastReference.Uri.ToString());
    public ICollection<string> Description => new DynamicObjectCollection<string>(this, Vocabulary.AssetDescription.Uri.ToString());
    public ICollection<string> Summary => new DynamicObjectCollection<string>(this, Vocabulary.AssetSummary.Uri.ToString());
    public ICollection<string> Tag => new DynamicObjectCollection<string>(this, Vocabulary.AssetTag.Uri.ToString());
    public ICollection<string> ConsignmentId => new DynamicObjectCollection<string>(this, Vocabulary.ConsignmentTdrId.Uri.ToString());
    public ICollection<string> BatchId => new DynamicObjectCollection<string>(this, Vocabulary.BatchDriId.Uri.ToString());
    public ICollection<string> SourceInternalName => new DynamicObjectCollection<string>(this, Vocabulary.AssetSourceInternalName.Uri.ToString());
    public ICollection<string> ConnectedAssetNote => new DynamicObjectCollection<string>(this, Vocabulary.AssetConnectedAssetNote.Uri.ToString());
    public ICollection<string> EmailAttachmentReference => new DynamicObjectCollection<string>(this, Vocabulary.EmailAttachmentReference.Uri.ToString());
    public ICollection<string> RelationDescription => new DynamicObjectCollection<string>(this, Vocabulary.AssetRelationDescription.Uri.ToString());
    public ICollection<string> PhysicalDescription => new DynamicObjectCollection<string>(this, Vocabulary.AssetPhysicalDescription.Uri.ToString());
    public ICollection<string> PaperNumber => new DynamicObjectCollection<string>(this, Vocabulary.PaperNumber.Uri.ToString());
    public ICollection<string> UsageRestrictionDescription => new DynamicObjectCollection<string>(this, Vocabulary.AssetUsageRestrictionDescription.Uri.ToString());
    public ICollection<IUriNode> UkGovernmentWebArchive => new DynamicObjectCollection<IUriNode>(this, Vocabulary.AssetHasUkGovernmentWebArchive.ToString());
    public ICollection<IUriNode> LegalStatus => new DynamicObjectCollection<IUriNode>(this, Vocabulary.AssetHasLegalStatus.Uri.ToString());
    public ICollection<Language> Language => new DynamicObjectCollection<Language>(this, Vocabulary.AssetHasLanguage.Uri.ToString());
    public ICollection<Copyright> Copyrights => new DynamicObjectCollection<Copyright>(this, Vocabulary.AssetHasCopyright.Uri.ToString());
    public ICollection<Retention> Retention => new DynamicObjectCollection<Retention>(this, Vocabulary.AssetHasRetention.Uri.ToString());
    public ICollection<Creation> Creation => new DynamicObjectCollection<Creation>(this, Vocabulary.AssetHasCreation.Uri.ToString());
    public ICollection<GeographicalPlace> GeographicalPlace => new DynamicObjectCollection<GeographicalPlace>(this, Vocabulary.AssetHasAssociatedGeographicalPlace.Uri.ToString());
    public ICollection<DateYmd> OriginDateStart => new DynamicObjectCollection<DateYmd>(this, Vocabulary.AssetHasOriginDateStart.Uri.ToString());
    public ICollection<DateYmd> OriginDateEnd => new DynamicObjectCollection<DateYmd>(this, Vocabulary.AssetHasOriginDateEnd.Uri.ToString());
    public ICollection<DateYmd> OriginApproximateDateStart => new DynamicObjectCollection<DateYmd>(this, Vocabulary.AssetHasOriginApproximateDateStart.Uri.ToString());
    public ICollection<DateYmd> OriginApproximateDateEnd => new DynamicObjectCollection<DateYmd>(this, Vocabulary.AssetHasOriginApproximateDateEnd.Uri.ToString());
    public ICollection<string> FilmProductionCompanyName => new DynamicObjectCollection<string>(this, Vocabulary.FilmProductionCompanyName.Uri.ToString());
    public ICollection<string> FilmTitle => new DynamicObjectCollection<string>(this, Vocabulary.FilmTitle.Uri.ToString());
    public ICollection<TimeSpan?> FilmDuration => new DynamicObjectCollection<TimeSpan?>(this, Vocabulary.FilmDuration.Uri.ToString());
    public ICollection<string> EvidenceProvider => new DynamicObjectCollection<string>(this, Vocabulary.EvidenceProviderName.Uri.ToString());
    public ICollection<string> Investigation => new DynamicObjectCollection<string>(this, Vocabulary.InvestigationName.Uri.ToString());
    public ICollection<DateTimeOffset?> InquiryHearingDate => new DynamicObjectCollection<DateTimeOffset?>(this, Vocabulary.InquiryHearingDate.Uri.ToString());
    public ICollection<string> InquirySessionDescription => new DynamicObjectCollection<string>(this, Vocabulary.InquirySessionDescription.Uri.ToString());
    public ICollection<InquiryAppearance> InquiryAppearances => new DynamicObjectCollection<InquiryAppearance>(this, Vocabulary.InquiryAssetHasInquiryAppearance.Uri.ToString());
    public ICollection<string> CourtSession => new DynamicObjectCollection<string>(this, Vocabulary.CourtSessionDescription.Uri.ToString());
    public ICollection<DateTimeOffset?> CourtSessionDate => new DynamicObjectCollection<DateTimeOffset?>(this, Vocabulary.CourtSessionDate.Uri.ToString());
    public ICollection<CourtCase> CourtCases => new DynamicObjectCollection<CourtCase>(this, Vocabulary.CourtAssetHasCourtCase.Uri.ToString());
    public ICollection<string> SealOwnerName => new DynamicObjectCollection<string>(this, Vocabulary.SealOwnerName.Uri.ToString());
    public ICollection<string> SealColour => new DynamicObjectCollection<string>(this, Vocabulary.SealColour.Uri.ToString());
    public ICollection<SealCatagory> SealCatagory => new DynamicObjectCollection<SealCatagory>(this, Vocabulary.SealAssetHasSealCategory.Uri.ToString());
    public ICollection<long?> ImageSequenceEnd => new DynamicObjectCollection<long?>(this, Vocabulary.ImageSequenceEnd.Uri.ToString());
    public ICollection<long?> ImageSequenceStart => new DynamicObjectCollection<long?>(this, Vocabulary.ImageSequenceStart.Uri.ToString());
    public ICollection<Dimension> Dimension => new DynamicObjectCollection<Dimension>(this, Vocabulary.AssetHasDimension.Uri.ToString());
    public ICollection<Dimension> ObverseDimension => new DynamicObjectCollection<Dimension>(this, Vocabulary.SealAssetHasObverseDimension.Uri.ToString());
    public ICollection<Dimension> ReverseDimension => new DynamicObjectCollection<Dimension>(this, Vocabulary.SealAssetHasReverseDimension.Uri.ToString());
    public ICollection<DateYmd> SealStartDate => new DynamicObjectCollection<DateYmd>(this, Vocabulary.SealAssetHasStartDate.Uri.ToString());
    public ICollection<DateYmd> SealEndDate => new DynamicObjectCollection<DateYmd>(this, Vocabulary.SealAssetHasEndDate.Uri.ToString());
    public ICollection<DateYmd> SealObverseStartDate => new DynamicObjectCollection<DateYmd>(this, Vocabulary.SealAssetHasObverseStartDate.Uri.ToString());
    public ICollection<DateYmd> SealObverseEndDate => new DynamicObjectCollection<DateYmd>(this, Vocabulary.SealAssetHasObverseEndDate.Uri.ToString());
    public ICollection<DateYmd> SealReverseStartDate => new DynamicObjectCollection<DateYmd>(this, Vocabulary.SealAssetHasReverseStartDate.Uri.ToString());
    public ICollection<DateYmd> SealReverseEndDate => new DynamicObjectCollection<DateYmd>(this, Vocabulary.SealAssetHasReverseEndDate.Uri.ToString());
    public ICollection<SensitivityReview> SensitivityReviews => new DynamicObjectCollection<SensitivityReview>(this, Vocabulary.AssetHasSensitivityReview.Uri.ToString());
    public ICollection<Variation> Variations => new DynamicObjectCollection<Variation>(this, Vocabulary.AssetHasVariation.Uri.ToString());
    public ICollection<Subset> Subset => new DynamicObjectCollection<Subset>(this, Vocabulary.AssetHasSubset.Uri.ToString());
    public ICollection<ILiteralNode> Xml => new DynamicObjectCollection<ILiteralNode>(this, Vocabulary.AssetDriXml.Uri.ToString());
    public ICollection<Change> Changes => new DynamicObjectCollection<Change>(this, Vocabulary.AssetHasChange.Uri.ToString());
}
